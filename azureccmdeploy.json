{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "defaultValue": "cdppoc",
      "type": "String",
      "metadata": {
        "description": "Name of the CDP Environment."
      }
    },
    "virtualNetworkName": {
      "defaultValue": "[parameters('environmentName')]",
      "type": "String",
      "metadata": {
        "description": "Name of Microsoft Virtual Networks."
      }
    },
    "networkSecurityGroupName": {
      "defaultValue": "[parameters('environmentName')]",
      "type": "String",
      "metadata": {
        "description": "Name of Microsoft Network security group."
      }
    },
    "networkAccessCIDR": {
      "type": "String",
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "CIDR block representing the address space of the corporate network's Subnet"
      }
    },
    "storageAccountName": {
      "defaultValue": "[parameters('environmentName')]",
      "type": "String",
      "metadata": {
        "description": "Name of Microsoft Storage Account."
      }
    },
    "privateEndpointNameForStorageAccount": {
      "defaultValue": "[parameters('environmentName')]",
      "type": "String",
      "metadata": {
        "description": "Name of Microsoft Storage Account Private Endpoint."
      }
    },
    "privateEndpointConnectionForStorageAccount": {
      "defaultValue": "[parameters('environmentName')]",
      "type": "String",
      "metadata": {
        "description": "Name of Microsoft Storage Account Private Endpoint Connection."
      }
    },
    "dataAccessIdentityName": {
      "defaultValue": "[concat(parameters('environmentName'), '-DataAccessIdentity')]",
      "type": "String",
      "metadata": {
        "description": "Name of Azure Managed Identity to access data."
      }
    },
    "loggerIdentityName": {
      "defaultValue": "[concat(parameters('environmentName'), '-LoggerIdentity')]",
      "type": "String",
      "metadata": {
        "description": "Name of Azure Managed Identity to write logs."
      }
    },
    "assumerIdentityName": {
      "defaultValue": "[concat(parameters('environmentName'), '-AssumerIdentity')]",
      "type": "String",
      "metadata": {
        "description": "Name of Azure Managed Identity that VM will assume."
      }
    },
    "rangerAuditIdentityName": {
      "defaultValue": "[concat(parameters('environmentName'), '-RangerIdentity')]",
      "type": "String",
      "metadata": {
        "description": "Name of Azure Managed Identity for writing Ranger Audit logs."
      }
    }
  },
  "variables": {
    "StorageBlobDataOwner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
    "StorageBlobDataContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "ManagedIdentityOperator": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
    "VMContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-09-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.2.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('virtualNetworkName'), '/default')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "addressPrefix": "10.2.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "endpoint1outr",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "endpoint2inr",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('networkAccessCIDR')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "endpoint3inr",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('networkAccessCIDR')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.dfs.core.windows.net",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointNameForStorageAccount'))]"
      ],
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.dfs.core.windows.net', '/', 'A')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.dfs.core.windows.net')]"
      ],
      "properties": {
        "ttl": 3600,
        "aRecords": [
          {
            "ipv4Address": "10.2.0.4"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-03-01",
      "name": "[concat(parameters('privateEndpointNameForStorageAccount'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.dfs.core.windows.net')]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-dfs-core-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.dfs.core.windows.net')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.blob.core.windows.net', '/', uniqueString(parameters('virtualNetworkName')))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.dfs.core.windows.net')]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-04-01",
      "name": "[parameters('privateEndpointNameForStorageAccount')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "privateLinkServiceConnections": [
          {
            "id": "[concat(resourceGroup().id, '/providers/Microsoft.Network/privateEndpoints/privateLinkServiceConnections/', parameters('privateEndpointNameForStorageAccount'))]",
            "name": "[parameters('privateEndpointNameForStorageAccount')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
              "groupIds": [
                "dfs"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/default')]"
        },
        "customDnsConfigs": [
          {
            "fqdn": "[concat(parameters('storageAccountName'), '.dfs.core.windows.net')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('dataAccessIdentityName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('rangerAuditIdentityName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('assumerIdentityName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('loggerIdentityName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccountName'), '/default/data')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccountName'), '/default/logs')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ]
}
